@startuml
title Deactivate User - UC3001

actor Admin

participant "DeactivateUserUI" as UI
participant "DeactivateUserController" as DC
participant "AuthorizationService" as Authz
participant "UserManagementService" as UserSvc

' Step 1: Admin requests list of active users
Admin -> UI: Requests user list

' Step 2: UI sends request to the controller
UI -> DC: activeUsers() (Request list of users)

' Step 3: Controller checks authorization
DC -> Authz: ensureAuthenticatedUserHasAnyOf(ExemploRoles.ADMIN)
Authz --> DC: Authorization confirmed

' Step 4: Controller retrieves list of active users
DC -> UserSvc: activeUsers() (Retrieve list of active users)
UserSvc --> DC: activeUsers() (Returns list)

' Step 5: Controller sends list of users to UI
DC -> UI: activeUsers() (Sends list to UI)

' Step 6: UI displays list of active users to Admin
UI --> Admin: Show list of users (Displays list)

' Step 7: Admin selects a user to deactivate
Admin -> UI: Select user (doShow)

' Step 8: UI sends deactivation request to the controller
UI -> DC: deactivateUser(SystemUser) (Deactivate selected user)

' Step 9: Controller verifies authorization
DC -> Authz: ensureAuthenticatedUserHasAnyOf(ExemploRoles.ADMIN)
Authz --> DC: Authorization confirmed

' Step 10: Controller deactivates the user
DC -> UserSvc: deactivateUser(SystemUser) (Perform deactivation)
UserSvc --> DC: deactivateUser(SystemUser) (Confirm deactivation)

' Step 11: Controller confirms successful deactivation
DC -> UI: Deactivation confirmed (Confirm to UI)

' Step 12: UI confirms deactivation to Admin
UI --> Admin: Deactivation successful (doShow)
@enduml
