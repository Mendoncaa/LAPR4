@startuml ClassDiagram

package Controller {
    class PhasesController {
        - validatorService: PhaseValidatorService
        - jobRepository: JobOpeningRepository
        - recruitmentProcess: RecruitmentProcess
        + validateJobReference(jobReference: JobReference): boolean
        + validatePhaseTransition(): Iterable<String>
    }
}

package Service {
    class PhaseValidatorService {
        - applicationRepository: ApplicationRepository
        - rankRepository: RankRepository
        + validatePhaseTransition(): Iterable<String>
        - validatePhaseTransitionForward(): boolean
        - validatePhaseTransitionBackward(): boolean
    }
}

package Repository {
    class JobOpeningRepository {
        + findJobOpeningByJobReference(jobReference: JobReference): JobOpening
    }

    class ApplicationRepository {
        + countApplicationByJobReference(jobReference: JobReference): int
        + countApplicationScreeningByJobReference(jobReference: JobReference): int
        + countApplicationInterviewsByJobReference(jobReference: JobReference): int
        + countApplicationResultByJobReference(jobReference: JobReference): int
    }

    class RankRepository {
        + countRankByJobReference(jobReference: JobReference): int
    }
}

package Model {
    class JobReference {
        +id: String
    }

    class RecruitmentProcess {
        +id: int
        +status: RecruitmentProcessStatus
        +phases: List<Phase>
        + nextPhase(): void
        + previousPhase(): void
    }

    class Phase {
        +name: PhaseName
        +startDate: StartDate
        +endDate: EndDate
        +status: PhaseStatus
    }

    enum PhaseName {
        APPLICATION,
        SCREENING,
        INTERVIEWS,
        ANALYSIS,
        RESULT
    }

    class StartDate {
        +date: Date
    }

    class EndDate {
        +date: Date
    }

    enum PhaseStatus {
        Open,
        Closed
    }

    enum RecruitmentProcessStatus {
        Uninitiated,
        InProcess,
        Finished
    }
}

PhasesController --> PhaseValidatorService
PhasesController --> JobOpeningRepository
PhaseValidatorService --> ApplicationRepository
PhaseValidatorService --> RecruitmentProcess
PhaseValidatorService --> RankRepository
RecruitmentProcess --> Phase : "has"
Phase --> PhaseName
Phase --> StartDate
Phase --> EndDate
Phase --> PhaseStatus
RecruitmentProcess --> RecruitmentProcessStatus

@enduml
