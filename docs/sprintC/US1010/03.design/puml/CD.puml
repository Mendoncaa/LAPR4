@startuml ClassDiagram

package Controller {
    class PhasesController {
        - validatorService: PhaseValidatorService
        - jobRepository: JobOpeningRepository
        - recruitmentProcess: RecruitmentProcess
        + validateJobReference(jobReference: JobReference): Iterable <String>
        - validatePhaseTransition(): Iterable<String>
    }
}

package Service {
    class PhaseValidatorService {
        - applicationRepository: ApplicationRepository
        - rankRepository: RankRepository
        - recruitmentProcess: RecruitmentProcess
        - jobReference: JobReference
        + validatePhaseTransition(): Iterable<String>
        - validatePhaseTransitionForward(): boolean
        - validatePhaseTransitionBackward(): boolean
    }
}

package Repository {
    class JobOpeningRepository {
        + findByJobReference(jobReference: JobReference): JobOpening
    }

    class ApplicationRepository {
        + countApplicationByJobReference(jobReference: JobReference): int
        + countScreeningByJobReference(jobReference: JobReference): int
        + countInterviewsByJobReference(jobReference: JobReference): int
        + countResultByJobReference(jobReference: JobReference): int
    }

    class RankRepository {
        + findRankByJobReference(jobReference: JobReference): Rank
    }
}

package Model {

    package JobOpeningAgg {

        class JobReference {
            + customerCode: String
            + jobNumber: int
        }

        class RecruitmentProcess {
            +id: int
            +status: RecruitmentProcessStatus
            +phases: List<Phase>
            + nextPhase(): void
            + previousPhase(): void
        }

        class Phase {
            +name: PhaseName
            +startDate: StartDate
            +endDate: EndDate
            +status: PhaseStatus
        }

        enum PhaseName {
            APPLICATION,
            SCREENING,
            INTERVIEWS,
            ANALYSIS,
            RESULT
        }

        class StartDate {
            +date: Date
        }

        class EndDate {
            +date: Date
        }

        enum PhaseStatus {
            Open,
            Closed
        }

        enum RecruitmentProcessStatus {
            Uninitiated,
            InProcess,
            Finished
        }
    }
}

package UI {
    class PhasesUI {
        - controller: PhasesController
        + doShow(): boolean
        + headline(): String
    }
}

PhasesController --> PhaseValidatorService
PhasesController --> JobOpeningRepository
PhasesController ..> JobReference
PhaseValidatorService --> ApplicationRepository
PhaseValidatorService ..> RecruitmentProcess
PhaseValidatorService --> RankRepository
RecruitmentProcess --> Phase : "has"
Phase --> PhaseName
Phase --> StartDate
Phase --> EndDate
Phase --> PhaseStatus
RecruitmentProcess --> RecruitmentProcessStatus

PhasesUI --> PhasesController

@enduml
