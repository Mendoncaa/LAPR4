@startuml ClassDiagram

package UI{
    class ListOrderedApplicationUI{
        - controller : ListOrderedApplicationController
        + doShow() : boolean
        + headline() : String
    }
}
package Controller {
    class ListOrderedApplicationController {
        - jobRepository: JobOpeningRepository
        - orderApplicationService : OrderApplicationService
        + validateJobReference(jobReference : JobReference) : List<Application>
    }
}

package Service {
    class OrderApplicationService {
        - applicationRepository: ApplicationRepository
        + orderedListOfApplications() : List<Application>
        - validateCurrentPhase() : boolean
        - orderApplicationsByIntervewGrade(applications : Iterable<Application>) : List<Application>
    }
}

package Repository {
    class JobOpeningRepository {
        + findByJobReference(jobReference : JobReference) : JobOpening
    }
    class ApplicationRepository {
        + findAll() : Iterable<Application>
    }
}

package Model {

    package CandidateAgg {

        class Candidate {
            + candidateEmail: EmailAddress
            + candidateName: Name
            + candidatePhone : PhoneNumber
            + state : CandidateState
        }

        class Name {
            + customerName : String
        }
        class EmailAddress {
            + email : String
        }
    }

    package JobOpeningAgg {

        class JobReference {
            + customerCode: String
            + jobNumber: int
        }

        class RecruitmentProcess {
            +id: int
            +status: RecruitmentProcessStatus
            +phases: List<Phase>
            + nextPhase(): void
            + previousPhase(): void
        }

        class Phase {
            +name: PhaseName
            +startDate: StartDate
            +endDate: EndDate
            +status: PhaseStatus
        }

        enum PhaseName {
            APPLICATION,
            SCREENING,
            INTERVIEWS,
            ANALYSIS,
            RESULT
        }

        class StartDate {
            +date: Date
        }

        class EndDate {
            +date: Date
        }

        enum PhaseStatus {
            Open,
            Closed
        }

        enum RecruitmentProcessStatus {
            Uninitiated,
            InProcess,
            Finished
        }
    }

    package ApplicationAgg {

       class Application{
            + interview : Interview
       }

       class Interview{
          + dateTime : InterviewDateTime
          + grade : InterviewGrade
       }

       class InterviewDateTime{
          + date : Date
       }

       class InterviewGrade{
          + grade : int
       }
    }

    Candidate --> Name
    Candidate --> EmailAddress
    RecruitmentProcess --> Phase : "has"
    Phase --> PhaseName
    Phase --> StartDate
    Phase --> EndDate
    Phase --> PhaseStatus
    RecruitmentProcess --> RecruitmentProcessStatus
    Application --> Interview
    Interview --> InterviewDateTime
    Interview --> InterviewGrade
}
ListOrderedApplicationUI --> ListOrderedApplicationController
ListOrderedApplicationController --> OrderApplicationService
OrderApplicationService --> ApplicationRepository
OrderApplicationService ..> RecruitmentProcess
ListOrderedApplicationUI ..> Candidate
ListOrderedApplicationController ..> JobReference
ListOrderedApplicationController --> JobOpeningRepository
OrderApplicationService ..> Application
}
@enduml
